SHARP #
INCLUDE include
LT <
IDENTIFIER stdio.h
GT >
INT int
IDENTIFIER test
LL_BRACKET (
INT int
IDENTIFIER a
COMMA ,
INT int
IDENTIFIER b
RL_BRACKET )
LB_BRACKET {
INT int
IDENTIFIER c
SEMICOLON ;
IDENTIFIER c
ASSIGN =
IDENTIFIER a
PLUS +
IDENTIFIER b
SEMICOLON ;
RETURN return
IDENTIFIER c
SEMICOLON ;
RB_BRACKET }
INT int
IDENTIFIER main
LL_BRACKET (
RL_BRACKET )
LB_BRACKET {
INT int
IDENTIFIER score
LM_BRACKET [
DIGIT_CONSTANT 6
RM_BRACKET ]
ASSIGN =
LB_BRACKET {
DIGIT_CONSTANT 76
COMMA ,
DIGIT_CONSTANT 82
COMMA ,
DIGIT_CONSTANT 90
COMMA ,
DIGIT_CONSTANT 86
COMMA ,
DIGIT_CONSTANT 79
COMMA ,
DIGIT_CONSTANT 62
RB_BRACKET }
SEMICOLON ;
INT int
IDENTIFIER credit
LM_BRACKET [
DIGIT_CONSTANT 6
RM_BRACKET ]
ASSIGN =
LB_BRACKET {
DIGIT_CONSTANT 2
COMMA ,
DIGIT_CONSTANT 2
COMMA ,
DIGIT_CONSTANT 1
COMMA ,
DIGIT_CONSTANT 2
COMMA ,
DIGIT_CONSTANT 2
COMMA ,
DIGIT_CONSTANT 3
RB_BRACKET }
SEMICOLON ;
INT int
IDENTIFIER stu_number
SEMICOLON ;
FLOAT float
IDENTIFIER mean
COMMA ,
IDENTIFIER sum
SEMICOLON ;
INT int
IDENTIFIER temp
SEMICOLON ;
INT int
IDENTIFIER i
SEMICOLON ;
IDENTIFIER printf
LL_BRACKET (
DOUBLE_QUOTE "
STRING_CONSTANT please input your student number:
DOUBLE_QUOTE "
RL_BRACKET )
SEMICOLON ;
IDENTIFIER scanf
LL_BRACKET (
DOUBLE_QUOTE "
STRING_CONSTANT %d
DOUBLE_QUOTE "
COMMA ,
ADDRESS &
IDENTIFIER stu_number
RL_BRACKET )
SEMICOLON ;
IDENTIFIER sum
ASSIGN =
DIGIT_CONSTANT 0
SEMICOLON ;
IDENTIFIER temp
ASSIGN =
DIGIT_CONSTANT 0
SEMICOLON ;
FOR for
LL_BRACKET (
IDENTIFIER i
ASSIGN =
DIGIT_CONSTANT 0
SEMICOLON ;
IDENTIFIER i
LT <
DIGIT_CONSTANT 6
SEMICOLON ;
IDENTIFIER i
SELF_PLUS ++
RL_BRACKET )
LB_BRACKET {
IDENTIFIER sum
ASSIGN =
IDENTIFIER sum
PLUS +
IDENTIFIER score
LM_BRACKET [
IDENTIFIER i
RM_BRACKET ]
MUL *
IDENTIFIER credit
LM_BRACKET [
IDENTIFIER i
RM_BRACKET ]
SEMICOLON ;
IDENTIFIER temp
ASSIGN =
IDENTIFIER temp
PLUS +
IDENTIFIER credit
LM_BRACKET [
IDENTIFIER i
RM_BRACKET ]
SEMICOLON ;
RB_BRACKET }
IDENTIFIER mean
ASSIGN =
IDENTIFIER sum
DIV /
IDENTIFIER temp
SEMICOLON ;
IF if
LL_BRACKET (
IDENTIFIER mean
GET >=
DIGIT_CONSTANT 60
RL_BRACKET )
LB_BRACKET {
IDENTIFIER mean
ASSIGN =
IDENTIFIER mean
MINUS -
DIGIT_CONSTANT 60
SEMICOLON ;
IDENTIFIER printf
LL_BRACKET (
DOUBLE_QUOTE "
STRING_CONSTANT the score of student number %d is %f higher than 60.\n
DOUBLE_QUOTE "
COMMA ,
IDENTIFIER stu_number
COMMA ,
IDENTIFIER mean
RL_BRACKET )
SEMICOLON ;
RB_BRACKET }
ELSE else
LB_BRACKET {
IDENTIFIER mean
ASSIGN =
DIGIT_CONSTANT 60
MINUS -
IDENTIFIER mean
SEMICOLON ;
IDENTIFIER printf
LL_BRACKET (
DOUBLE_QUOTE "
STRING_CONSTANT the score of student number %d is %f lower than 60.\n
DOUBLE_QUOTE "
COMMA ,
IDENTIFIER stu_number
COMMA ,
IDENTIFIER mean
RL_BRACKET )
SEMICOLON ;
RB_BRACKET }
WHILE while
LL_BRACKET (
DIGIT_CONSTANT 1
EQUAL ==
DIGIT_CONSTANT 2
RL_BRACKET )
LB_BRACKET {
IDENTIFIER temp
SELF_PLUS ++
SEMICOLON ;
RB_BRACKET }
IDENTIFIER test
LL_BRACKET (
DIGIT_CONSTANT 1
COMMA ,
DIGIT_CONSTANT 2
RL_BRACKET )
SEMICOLON ;
RETURN return
DIGIT_CONSTANT 0
SEMICOLON ;
RB_BRACKET }
